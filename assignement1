import java.util.Scanner;

public class assignment1 {

    public static double calcTarget(int x, int y, int n) {
        // Calcualte x^n + y^n
        double target = Math.pow(x, n) + Math.pow(y, n);
        return target;
    }

    public static double[] calcMiss(double target, int n) {
        // CALCUATE Z AND FIND THE CLOSEST MISS
        double[] miss = new double[3];
        double z = Math.round(Math.pow(target, 1.0 / n));
        double zBottom = Math.floor(z);
        double zTop = z + 1;
        double missBottom = Math.abs(Math.pow(zBottom, n) - target);
        double missTop = Math.abs(Math.pow(zTop, n) - target);

        // miss = z, actual miss, relative miss
        // miss[0] = z
        // miss[1] = actual miss
        // miss[2] = relative miss
        if (missBottom < missTop) {
            miss[0] = zBottom;
        } else {
            miss[0] = zTop;
        }
        miss[1] = Math.min(missBottom, missTop);

        miss[2] = Math.min(missBottom, missTop) / target;

        return (miss);
    }

    public static void printMiss(int x, int y, double z, int n, double relativeMiss, double actualMiss) {
        // PRINT OUT THE SMALLEST MISS AND WAIT FOR USER TO CONTINUE
        System.out.println("(" + x + ", " + y + ", " + z + ", " + n + ") is a near miss");
        System.out.println("The actual miss is: " + actualMiss);
        System.out.println("The relative miss is: " + relativeMiss);
    }

    public static void findNearMisses(int k, int n) {
        double[] firstMiss = calcMiss(calcTarget(10, 10, n), n);
        double smallestMiss = firstMiss[2];
        printMiss(10, 10, firstMiss[0], n, smallestMiss, firstMiss[1]);
        for (int x = 10; x <= k; x++) {
            for (int y = 10; y <= k; y++) {
                // Claculate Target
                double target = calcTarget(x, y, n);

                // CALCULATE Z and Relative Miss
                double[] miss = calcMiss(target, n);

                // Check if Z is smaller than current near miss
                // OUTPUT if it is a new nearest miss
                if (miss[2] < smallestMiss) {
                    smallestMiss = miss[2];
                    printMiss(x, y, miss[0], n, smallestMiss, miss[1]);
                }
            }
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the value of k: ");
        int k = sc.nextInt();
        System.out.print("Enter the value of n: ");
        int n = sc.nextInt();
        findNearMisses(k, n);
    }

}